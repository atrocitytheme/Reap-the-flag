<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Http.Connections.Client</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection">
            <summary>
            Used to make a connection to an ASP.NET Core ConnectionHandler using an HTTP-based transport.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.Transport">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.Features">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.ConnectionId">
            <summary>
            Gets or sets the connection ID.
            </summary>
            <remarks>
            The connection ID is set when the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> is started and should not be set by user code.
            If the connection was created with <see cref="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.SkipNegotiation"/> set to <c>true</c>
            then the connection ID will be <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.Items">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.Microsoft#AspNetCore#Connections#Features#IConnectionInherentKeepAliveFeature#HasInherentKeepAlive">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> class.
            </summary>
            <param name="url">The URL to connect to.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.#ctor(System.Uri,Microsoft.AspNetCore.Http.Connections.HttpTransportType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> class.
            </summary>
            <param name="url">The URL to connect to.</param>
            <param name="transports">A bitmask comprised of one or more <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpTransportType"/> that specify what transports the client should use.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.#ctor(System.Uri,Microsoft.AspNetCore.Http.Connections.HttpTransportType,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> class.
            </summary>
            <param name="url">The URL to connect to.</param>
            <param name="transports">A bitmask comprised of one or more <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpTransportType"/> that specify what transports the client should use.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.#ctor(Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> class.
            </summary>
            <param name="httpConnectionOptions">The connection options to use.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the connection.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous start.</returns>
            <remarks>
            A connection cannot be restarted after it has stopped. To restart a connection
            a new instance should be created using the same options.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.StartAsync(Microsoft.AspNetCore.Connections.TransferFormat,System.Threading.CancellationToken)">
            <summary>
            Starts the connection using the specified transfer format.
            </summary>
            <param name="transferFormat">The transfer format the connection should use.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous start.</returns>
            <remarks>
            A connection cannot be restarted after it has stopped. To restart a connection
            a new instance should be created using the same options.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.DisposeAsync">
            <summary>
            Disposes the connection.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous dispose.</returns>
            <remarks>
            A connection cannot be restarted after it has stopped. To restart a connection
            a new instance should be created using the same options.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions">
            <summary>
            Options used to configure a <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.HttpMessageHandlerFactory">
            <summary>
            Gets or sets a delegate for wrapping or replacing the <see cref="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.HttpMessageHandlerFactory"/>
            that will make HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.Headers">
            <summary>
            Gets or sets a collection of headers that will be sent with HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.ClientCertificates">
            <summary>
            Gets or sets a collection of client certificates that will be sent with HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.Cookies">
            <summary>
            Gets or sets a collection of cookies that will be sent with HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.Url">
            <summary>
            Gets or sets the URL used to send HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.Transports">
            <summary>
            Gets or sets a bitmask comprised of one or more <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpTransportType"/> that specify what transports the client should use to send HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.SkipNegotiation">
            <summary>
            Gets or sets a value indicating whether negotiation is skipped when connecting to the server.
            </summary>
            <remarks>
            Negotiation can only be skipped when using the <see cref="F:Microsoft.AspNetCore.Http.Connections.HttpTransportType.WebSockets"/> transport.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.AccessTokenProvider">
            <summary>
            Gets or sets an access token provider that will be called to return a token for each HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.CloseTimeout">
            <summary>
            Gets or sets a close timeout.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.Credentials">
            <summary>
            Gets or sets the credentials used when making HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.Proxy">
            <summary>
            Gets or sets the proxy used when making HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.UseDefaultCredentials">
            <summary>
            Gets or sets a value indicating whether default credentials are used when making HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.WebSocketConfiguration">
            <summary>
            Gets or sets a delegate that will be invoked with the <see cref="T:System.Net.WebSockets.ClientWebSocketOptions"/> object used
            to configure the WebSocket when using the WebSockets transport.
            </summary>
            <remarks>
            This delegate is invoked after headers from <see cref="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.Headers"/> and the access token from <see cref="P:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions.AccessTokenProvider"/>
            has been applied.
            </remarks>
        </member>
        <member name="M:System.Threading.Tasks.ForceAsyncTaskExtensions.ForceAsync(System.Threading.Tasks.Task)">
            <summary>
            Returns an awaitable/awaiter that will ensure the continuation is executed
            asynchronously on the thread pool, even if the task is already completed
            by the time the await occurs.  Effectively, it is equivalent to awaiting
            with ConfigureAwait(false) and then queuing the continuation with Task.Run,
            but it avoids the extra hop if the continuation already executed asynchronously.
            </summary>
        </member>
    </members>
</doc>
